{"ast":null,"code":"var _jsxFileName = \"D:\\\\chile\\\\mi-proyecto\\\\src\\\\components\\\\Weather.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport fetchWeather from '../api/axios';\nimport { Button, CardContent, TextField, Typography } from '@mui/material';\nimport Card from '@mui/material/Card';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Weather = () => {\n  _s();\n  const [city, setCity] = useState('');\n  const [weather, setWeather] = useState(null);\n  const handleFetchWeather = async () => {\n    try {\n      const validatetime = '2024-09-15T00:00:00Z';\n      const parameters = 't_2m:C';\n      const locations = city;\n      const format = 'json';\n      const optionals = {};\n      const weatherData = await fetchWeather(validatetime, parameters, locations, format, optionals);\n      setWeather(weatherData);\n    } catch (error) {\n      console.error('Error fetching weather:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      gutterBottom: true,\n      children: \"Clima\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Ciudad\",\n      value: city,\n      onChange: e => setCity(e.target.value),\n      style: {\n        marginBottom: 20\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: handleFetchWeather,\n      children: \"Obtener Clima\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), weather && /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        maxWidth: 600,\n        margin: '20px auto'\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: weather.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: [\"Temperatura: \", weather.main.temp, \"\\xB0C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: [\"Condici\\xF3n: \", weather.weather[0].description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(Weather, \"Rlt+ue27S+f6rx/tpM2n2/OvG3k=\");\n_c = Weather;\nexport default Weather;\nvar _c;\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"names":["React","useState","fetchWeather","Button","CardContent","TextField","Typography","Card","jsxDEV","_jsxDEV","Fragment","_Fragment","Weather","_s","city","setCity","weather","setWeather","handleFetchWeather","validatetime","parameters","locations","format","optionals","weatherData","error","console","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","label","value","onChange","e","target","style","marginBottom","color","onClick","maxWidth","margin","name","main","temp","description","_c","$RefreshReg$"],"sources":["D:/chile/mi-proyecto/src/components/Weather.js"],"sourcesContent":["import React, {useState} from 'react';\nimport fetchWeather from '../api/axios';\nimport {Button, CardContent, TextField, Typography} from '@mui/material';\nimport Card from '@mui/material/Card';\n\nconst Weather = () => {\n  const [city, setCity] = useState('');\n  const [weather, setWeather] = useState(null);\n\n  const handleFetchWeather = async () => {\n    try {\n      const validatetime = '2024-09-15T00:00:00Z';\n      const parameters = 't_2m:C';\n      const locations = city;\n      const format = 'json';\n      const optionals = {};\n\n      const weatherData = await fetchWeather(\n        validatetime,\n        parameters,\n        locations,\n        format,\n        optionals\n      );\n      setWeather(weatherData);\n    } catch (error) {\n      console.error('Error fetching weather:', error);\n    }\n  };\n\n  return (\n    <>\n      <Typography variant=\"h5\" gutterBottom>\n        Clima\n      </Typography>\n      <TextField\n        label=\"Ciudad\"\n        value={city}\n        onChange={(e) => setCity(e.target.value)}\n        style={{marginBottom: 20}}\n      />\n      <Button variant=\"contained\" color=\"primary\" onClick={handleFetchWeather}>\n        Obtener Clima\n      </Button>\n      {weather && (\n        <Card style={{maxWidth: 600, margin: '20px auto'}}>\n          <CardContent>\n            <Typography variant=\"h6\">{weather.name}</Typography>\n            <Typography variant=\"body1\">\n              Temperatura: {weather.main.temp}°C\n            </Typography>\n            <Typography variant=\"body1\">\n              Condición: {weather.weather[0].description}\n            </Typography>\n          </CardContent>\n        </Card>\n      )}\n    </>\n  );\n};\n\nexport default Weather;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}