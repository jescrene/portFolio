{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nconst useTicTacToe = () => {\n  _s();\n  const [board, setBoard] = useState(Array(9).fill(null));\n  const [playerSymbol, setPlayerSymbol] = useState('X');\n  const [winner, setWinner] = useState(null);\n  const [mode, setMode] = useState('player');\n  const [currentTurn, setCurrentTurn] = useState('X');\n  useEffect(() => {\n    if (mode === 'computer' && currentTurn === 'O' && !winner) {\n      makeComputerMove();\n    }\n  }, [currentTurn, mode, winner]);\n  const handleClick = index => {\n    if (board[index] !== null || winner !== null) {\n      return;\n    }\n    const newBoard = [...board];\n    newBoard[index] = currentTurn;\n    setBoard(newBoard);\n    const newWinner = calculateWinner(newBoard);\n    if (newWinner) {\n      setWinner(newWinner);\n    } else {\n      setCurrentTurn(currentTurn === 'X' ? 'O' : 'X');\n    }\n  };\n  const calculateWinner = board => {\n    const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n      if (board[a] && board[a] === board[b] && board[a] === board[c]) {\n        return board[a];\n      }\n    }\n    return null;\n  };\n  const makeComputerMove = () => {\n    let availableMoves = board.map((value, index) => value === null ? index : null).filter(val => val !== null);\n    if (availableMoves.length === 0) {\n      return;\n    }\n    const randomMove = availableMoves[Math.floor(Math.random() * availableMoves.length)];\n    if (board[randomMove] === null) {\n      handleClick(randomMove);\n    }\n  };\n  const resetGame = () => {\n    setBoard(Array(9).fill(null));\n    setWinner(null);\n    setCurrentTurn('X');\n  };\n  return {\n    board,\n    playerSymbol,\n    setPlayerSymbol,\n    handleClick,\n    resetGame,\n    mode,\n    setMode,\n    winner,\n    currentTurn\n  };\n};\n_s(useTicTacToe, \"L2o7YGtKmiYH6EGLuP9MynfZiVM=\");\nexport default useTicTacToe;","map":{"version":3,"names":["useState","useEffect","useTicTacToe","_s","board","setBoard","Array","fill","playerSymbol","setPlayerSymbol","winner","setWinner","mode","setMode","currentTurn","setCurrentTurn","makeComputerMove","handleClick","index","newBoard","newWinner","calculateWinner","lines","i","length","a","b","c","availableMoves","map","value","filter","val","randomMove","Math","floor","random","resetGame"],"sources":["D:/chile/mi-proyecto/src/pages/ticTacToe/useTicTacToe.js"],"sourcesContent":["import {useState, useEffect} from 'react';\n\nconst useTicTacToe = () => {\n  const [board, setBoard] = useState(Array(9).fill(null));\n  const [playerSymbol, setPlayerSymbol] = useState('X');\n  const [winner, setWinner] = useState(null);\n  const [mode, setMode] = useState('player');\n  const [currentTurn, setCurrentTurn] = useState('X');\n\n  useEffect(() => {\n    if (mode === 'computer' && currentTurn === 'O' && !winner) {\n      makeComputerMove();\n    }\n  }, [currentTurn, mode, winner]);\n\n  const handleClick = (index) => {\n    if (board[index] !== null || winner !== null) {\n      return;\n    }\n\n    const newBoard = [...board];\n    newBoard[index] = currentTurn;\n    setBoard(newBoard);\n\n    const newWinner = calculateWinner(newBoard);\n    if (newWinner) {\n      setWinner(newWinner);\n    } else {\n      setCurrentTurn(currentTurn === 'X' ? 'O' : 'X');\n    }\n  };\n\n  const calculateWinner = (board) => {\n    const lines = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6],\n    ];\n\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n      if (board[a] && board[a] === board[b] && board[a] === board[c]) {\n        return board[a];\n      }\n    }\n\n    return null;\n  };\n\n  const makeComputerMove = () => {\n    let availableMoves = board\n      .map((value, index) => (value === null ? index : null))\n      .filter((val) => val !== null);\n\n    if (availableMoves.length === 0) {\n      return;\n    }\n\n    const randomMove =\n      availableMoves[Math.floor(Math.random() * availableMoves.length)];\n\n    if (board[randomMove] === null) {\n      handleClick(randomMove);\n    }\n  };\n\n  const resetGame = () => {\n    setBoard(Array(9).fill(null));\n    setWinner(null);\n    setCurrentTurn('X');\n  };\n\n  return {\n    board,\n    playerSymbol,\n    setPlayerSymbol,\n    handleClick,\n    resetGame,\n    mode,\n    setMode,\n    winner,\n    currentTurn,\n  };\n};\n\nexport default useTicTacToe;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}